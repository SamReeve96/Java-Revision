#BlueJ class context
comment0.params=
comment0.target=Machine()
comment0.text=\r\n\ Sets\ up\ the\ machine\ and\ basic\ tools\ in\ order\ for\ the\ program\ to\ run.\r\n\ the\ machine's\ canvas\ is\ draw\ with\ edges\ defined.\r\n\ the\ distance\ to\ the\ gap\ is\ calculated\r\n\ Then\ the\ positions\ of\ all\ the\ wall\ variables\ are\ set\ up\r\n\ finally\ the\ two\ arrays\ for\ Pinball's\ and\ Static\ Objects\ are\ initialised\r\n
comment1.params=
comment1.target=void\ erase()
comment1.text=\r\n\ Draw\ a\ rectangle\ over\ the\ board\ (not\ the\ boarders)\ to\ clear\ the\ screen\ and\ prevent\ ghosting\r\n
comment10.params=
comment10.target=int\ getLeftBottomWall()
comment10.text=\r\n\ Return\ the\ x\ Co-ordinates\ for\ left\ side\ of\ the\ bottom\ wall\r\n
comment11.params=
comment11.target=int\ getRightBottomWall()
comment11.text=\r\n\ Return\ the\ x\ Co-ordinates\ for\ right\ side\ of\ the\ bottom\ wall\r\n
comment12.params=
comment12.target=void\ pauseMachine()
comment12.text=\r\n\ Introduces\ a\ small\ delay\ in\ ball\ movement,\ for\ smooth\ running\r\n
comment13.params=
comment13.target=void\ resetMachine()
comment13.text=\r\n\ Resets\ the\ machine\ back\ to\ initial\ view,\ with\ no\ pinballs\r\n
comment14.params=newPinball
comment14.target=void\ addPinball(Pinball)
comment14.text=\r\n\ adds\ a\ new\ pinball\ to\ the\ Pinball\ array\r\n\r\n\ @param\ newPinball\ the\ new\ pinball\ to\ be\ added\ to\ the\ array\r\n
comment15.params=newStatic
comment15.target=void\ addStatic(StaticObject)
comment15.text=\r\n\ adds\ a\ new\ static\ object\ (hole\ or\ bumper)\ to\ the\ StaticObject\ array\r\n\r\n\ @param\ newStatic\ the\ new\ static\ object\ to\ be\ added\ to\ the\ array\r\n
comment16.params=pinball
comment16.target=void\ eventFreeze(PinballObject)
comment16.text=\r\n\ If\ an\ event\ has\ just\ triggered,\ prevent\ any\ other\ events\ from\ happening\ for\ the\ next\ 30\ frames\ (31\ as\ one\ is\ instantly\ taken\ off)\r\n\ @param\ pinball\ the\ pinball\ that\ this\ will\ be\ applied\ to\r\n
comment17.params=pinball
comment17.target=void\ countFrame(PinballObject)
comment17.text=\r\n\ for\ each\ frame\ that\ passes\ this\ count\ down\ any\ pinballs\ that\ have\ frames\ more\ than\ 0\r\n\ @param\ pinball\ the\ pinball\ that\ has\ recently\ collided\ with\ another\ pinball\r\n
comment18.params=pinball
comment18.target=void\ ballCollision(PinballObject)
comment18.text=\r\n\ Detects\ whether\ the\ currently\ moving\ pinball\ has\ collided\ with\ any\ other\ pinballs\ in\ the\ pinball\ array\r\n\r\n\ @param\ pinball\ the\ object\ currently\ being\ moved.\r\n
comment19.params=staticObject
comment19.target=void\ staticObjectCollision(StaticObject)
comment19.text=\r\n\ Detects\ whether\ the\ current\ static\ object\ being\ drawn\ has\ been\ collided\ with\ by\ a\ pinball\ in\ the\ pinball\ array\r\n\r\n\ @param\ staticObject\ the\ static\ object\ currently\ being\ drawn\r\n
comment2.params=pinballObj
comment2.target=void\ erasePinball(PinballObject)
comment2.text=\r\n\ Erase\ a\ PinballObject\ from\ the\ view\ of\ the\ pinball\ machine\r\n\r\n\ @param\ pinballObj\ The\ object\ to\ be\ erased\r\n
comment20.params=object
comment20.target=void\ wallCollision(PinballObject)
comment20.text=\r\n\ Check\ to\ see\ if\ the\ pinball\ being\ moved\ has\ collided\ with\ a\ wall\r\n\r\n\ @param\ object\ the\ current\ pinball\ being\ moved\r\n
comment21.params=
comment21.target=int\ totalScore()
comment22.params=
comment22.target=void\ start()
comment22.text=\r\n\ Start\ will\ begin\ iterating\ through\ the\ object\ arrays,\ drawing\ and\ reacting\ to\ events\ until\ its\ "game\ over"\r\n
comment23.params=
comment23.target=void\ end()
comment23.text=\r\n\ Set\ endgame\ variable\ to\ true\ to\ end\ the\ loop\ and\ get\ the\ total\ score\ for\ objects\ in\ the\ machine\r\n
comment3.params=pinballObj
comment3.target=void\ drawPinballObject(PinballObject)
comment3.text=\r\n\ Draw\ a\ PinballObject\ at\ its\ current\ position\ onto\ the\ view\ of\ the\ pinball\ machine\r\n\ \r\n\ @param\ pinballObj\ The\ object\ to\ be\ drawn\r\n
comment4.params=pinballObj
comment4.target=void\ drawScore(PinballObject)
comment4.text=\r\n\ Draw\ a\ PinballObject\ at\ its\ current\ position\ onto\ the\ view\ of\ the\ pinball\ machine\r\n\r\n\ @param\ pinballObj\ The\ object\ the\ score\ belongs\ to\ and\ will\ be\ drawn\ on\r\n
comment5.params=
comment5.target=void\ drawMachine()
comment5.text=\r\n\ Draw\ the\ edges\ of\ the\ pinball\ machine\r\n
comment6.params=
comment6.target=int\ getLeftWall()
comment6.text=\r\n\ Return\ the\ edge\ of\ the\ left-hand\ wall\r\n
comment7.params=
comment7.target=int\ getRightWall()
comment7.text=\r\n\ Return\ the\ edge\ of\ the\ left-hand\ wall\r\n
comment8.params=
comment8.target=int\ getTopWall()
comment8.text=\r\n\ Return\ the\ edge\ of\ the\ Top\ wall\r\n
comment9.params=
comment9.target=int\ getBottomWall()
comment9.text=\r\n\ Return\ the\ edge\ of\ the\ bottom\ side\ wall\r\n
numComments=24
