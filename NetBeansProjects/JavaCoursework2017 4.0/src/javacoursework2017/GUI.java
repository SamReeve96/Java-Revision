/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javacoursework2017;

import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Samuel
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddToBasket = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        btnRemovePipe = new javax.swing.JButton();
        pnlPipeDataForm = new javax.swing.JPanel();
        tfdQuantity = new javax.swing.JTextField();
        cbxOuterReinforcement = new javax.swing.JCheckBox();
        lblLength = new javax.swing.JLabel();
        cbxChemResistance = new javax.swing.JCheckBox();
        tfdLength = new javax.swing.JTextField();
        lbl_InnerInsulation = new javax.swing.JLabel();
        lblDiameter = new javax.swing.JLabel();
        lblColour = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblGrade = new javax.swing.JLabel();
        cmbxColourPrint = new javax.swing.JComboBox<>();
        lblChemResistance = new javax.swing.JLabel();
        cbxInnerInsulation = new javax.swing.JCheckBox();
        tfdDiameter = new javax.swing.JTextField();
        cmbxGrade = new javax.swing.JComboBox<>();
        lblOuterReinforcement = new javax.swing.JLabel();
        lblTotalCost = new javax.swing.JLabel();
        lblTotalCostVar = new javax.swing.JLabel();
        btnCompleteOrder = new javax.swing.JButton();
        lblUserMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pipe Ordering System");
        setMaximumSize(new java.awt.Dimension(1200, 500));
        setMinimumSize(new java.awt.Dimension(1200, 500));
        setPreferredSize(new java.awt.Dimension(1200, 400));

        btnAddToBasket.setText("Add Pipe to Basket");
        btnAddToBasket.setToolTipText("Add the pipe to the basket, \nNote: if the pipe is not valid it will not be added");
        btnAddToBasket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToBasketActionPerformed(evt);
            }
        });

        btnClear.setText("Clear Form");
        btnClear.setToolTipText("Clears the contents of the text boxes and resets the checkBoxes and Combo boxes");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plastic Grade", "Colour Print", "Inner Insulation", "Outer Reinforcement", "Chem Resist", "Length", "Diameter", "Quantity", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrder);
        if (tblOrder.getColumnModel().getColumnCount() > 0) {
            tblOrder.getColumnModel().getColumn(7).setResizable(false);
        }

        btnRemovePipe.setText("Remove Pipe");
        btnRemovePipe.setToolTipText("Remove a selected pipe from the basket");
        btnRemovePipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePipeActionPerformed(evt);
            }
        });

        tfdQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfdQuantityActionPerformed(evt);
            }
        });

        cbxOuterReinforcement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxOuterReinforcementActionPerformed(evt);
            }
        });

        lblLength.setText("Length (Metres):");
        lblLength.setToolTipText("Max Size: 6 Metres ");

        cbxChemResistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxChemResistanceActionPerformed(evt);
            }
        });

        lbl_InnerInsulation.setText("Inner insulation:");

        lblDiameter.setText("Diameter (Inches):");

        lblColour.setText("Colour Print:");

        lblQuantity.setText("Quantity");

        lblGrade.setText("Plastic Grade:");

        cmbxColourPrint.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2" }));
        cmbxColourPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxColourPrintActionPerformed(evt);
            }
        });

        lblChemResistance.setText("Chemical resistance");

        cbxInnerInsulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxInnerInsulationActionPerformed(evt);
            }
        });

        cmbxGrade.setMaximumRowCount(5);
        cmbxGrade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        lblOuterReinforcement.setText("Outer reinforcement:");

        javax.swing.GroupLayout pnlPipeDataFormLayout = new javax.swing.GroupLayout(pnlPipeDataForm);
        pnlPipeDataForm.setLayout(pnlPipeDataFormLayout);
        pnlPipeDataFormLayout.setHorizontalGroup(
            pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPipeDataFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPipeDataFormLayout.createSequentialGroup()
                        .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDiameter, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLength, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(30, 30, 30)
                        .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfdLength, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfdDiameter, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPipeDataFormLayout.createSequentialGroup()
                        .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOuterReinforcement)
                            .addComponent(lblGrade)
                            .addComponent(lblColour)
                            .addComponent(lbl_InnerInsulation)
                            .addComponent(lblChemResistance)
                            .addComponent(lblQuantity))
                        .addGap(18, 18, 18)
                        .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbxGrade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbxColourPrint, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxInnerInsulation, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbxChemResistance, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbxOuterReinforcement, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfdQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        pnlPipeDataFormLayout.setVerticalGroup(
            pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPipeDataFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLength)
                    .addComponent(tfdLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDiameter)
                    .addComponent(tfdDiameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantity)
                    .addComponent(tfdQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbxGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGrade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColour)
                    .addComponent(cmbxColourPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_InnerInsulation)
                    .addComponent(cbxInnerInsulation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOuterReinforcement)
                    .addComponent(cbxOuterReinforcement))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPipeDataFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChemResistance)
                    .addComponent(cbxChemResistance))
                .addContainerGap())
        );

        cbxOuterReinforcement.getAccessibleContext().setAccessibleName("Outer Reinforcement check box");
        lblLength.getAccessibleContext().setAccessibleName("Length");
        cbxChemResistance.getAccessibleContext().setAccessibleName("Chemical Resistance check box");
        tfdLength.getAccessibleContext().setAccessibleName("Length Text Box");
        lbl_InnerInsulation.getAccessibleContext().setAccessibleName("Inner insulation");
        lblDiameter.getAccessibleContext().setAccessibleName("Diameter");
        lblColour.getAccessibleContext().setAccessibleName("Colour Print");
        lblGrade.getAccessibleContext().setAccessibleName("Plastic Grade");
        cmbxColourPrint.getAccessibleContext().setAccessibleName("Colour print Combo box");
        cbxInnerInsulation.getAccessibleContext().setAccessibleName("Inner insulation check box");
        tfdDiameter.getAccessibleContext().setAccessibleName("Diameter text box");
        cmbxGrade.getAccessibleContext().setAccessibleName("Plastic Grade combo box");
        lblOuterReinforcement.getAccessibleContext().setAccessibleName("Outer Reinforcement");

        lblTotalCost.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTotalCost.setText("Total Cost: £");

        lblTotalCostVar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotalCostVar.setText("0.00");

        btnCompleteOrder.setText("Complete Order");
        btnCompleteOrder.setToolTipText("Create a .txt file containg the contents of your order, \nfile will be created wherever the app is located");
        btnCompleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteOrderActionPerformed(evt);
            }
        });

        lblUserMessage.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lblUserMessage.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlPipeDataForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 960, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddToBasket)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemovePipe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCompleteOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTotalCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTotalCostVar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblUserMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlPipeDataForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(lblUserMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddToBasket)
                    .addComponent(btnClear)
                    .addComponent(btnRemovePipe)
                    .addComponent(lblTotalCost)
                    .addComponent(lblTotalCostVar)
                    .addComponent(btnCompleteOrder))
                .addContainerGap())
        );

        btnRemovePipe.getAccessibleContext().setAccessibleDescription("");
        lblUserMessage.getAccessibleContext().setAccessibleName("Message to user");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbxColourPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxColourPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbxColourPrintActionPerformed

    private void cbxInnerInsulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxInnerInsulationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxInnerInsulationActionPerformed

    private void cbxOuterReinforcementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxOuterReinforcementActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxOuterReinforcementActionPerformed

    private void cbxChemResistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxChemResistanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxChemResistanceActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddToBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToBasketActionPerformed
        
        String errString = "";   
        double length = 0.00;
        double diameter = 0.00;
        int quantOfPipe = 0;
        
        try {length = Double.parseDouble(tfdLength.getText());}
        catch (NumberFormatException ex) {
            System.err.println("Length err:" + ex.getMessage());
            errString += "Length Field must contain a number, ";
        }
        
        if (length > 6){errString += "Length must be 6 Metres or less, ";}
        
        try {diameter = Double.parseDouble(tfdDiameter.getText());}
        catch (NumberFormatException ex) {
            System.err.println("Diameter err:" + ex.getMessage());
            errString += "Diameter Field must contain a number, ";
        }
        
        try {quantOfPipe = Integer.parseInt(tfdQuantity.getText());}
        catch (NumberFormatException ex) {
            System.err.println("Quantity err:" + ex.getMessage());
            errString += "Quantity Field must contain a whole number, ";
        }
        
        int colourPrint = cmbxColourPrint.getSelectedIndex();
        int plasticGrade = cmbxGrade.getSelectedIndex() + 1;
        boolean innerIn = false;
        boolean outerR = false;
        boolean chemResist = false;
        
        if (cbxInnerInsulation.isSelected() == true) {
            innerIn = true;
        } 
        if (cbxOuterReinforcement.isSelected() == true) {
            outerR = true;
        }
        if (cbxChemResistance.isSelected() == true) {
            chemResist = true;
        }
        
        if (errString.equals("")){
            try{PipeTypeDetector(plasticGrade, colourPrint, quantOfPipe, innerIn,
                outerR, chemResist, length, diameter);}
            catch (Exception ex){errString += ex.getMessage();}
        }
        
        if (errString.equals("")){
            addBasketToTable();
            totalCostOfOrder();
            clearForm();
        }
        else {lblUserMessage.setText("Error: " + errString);}
    }//GEN-LAST:event_btnAddToBasketActionPerformed

    private void tfdQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfdQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfdQuantityActionPerformed

    private void btnRemovePipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovePipeActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
        int[] rows = tblOrder.getSelectedRows();
        if (rows.length != 1){lblUserMessage.setText("Error: Please select a single row");}
        else{
            
            //MultiRow Deletion disabled due to unfixable exception
            
            //for(int i=0;i<rows.length;i++){
                //model.removeRow(rows[i]-i);
                //Needs to account for row 0 (Confirm)

                //remove item from basket too!
                //basket.remove(rows[i]);
            //}
            
            //Single row deleter
            
            //Remove from JTable
            model.removeRow(rows[0]);
            //remove item from basket too!
            basket.remove(rows[0]);
            
        lblUserMessage.setText("Pipe Removed");
        totalCostOfOrder();
        }
    }//GEN-LAST:event_btnRemovePipeActionPerformed

    private void btnCompleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteOrderActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
        if (basket.size() == 0){lblUserMessage.setText("Error: Please add Pipes to order");}
        else{
            try {
                writeToFile();
            } 
            catch (Exception ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnCompleteOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
        
    }
    
//GUI Methods

    public void clearForm(){
        tfdLength.setText("");
        tfdDiameter.setText("");
        tfdQuantity.setText("");
        cmbxColourPrint.setSelectedIndex(0);
        cmbxGrade.setSelectedIndex(0);
        cbxInnerInsulation.setSelected(false);
        cbxOuterReinforcement.setSelected(false);
        cbxChemResistance.setSelected(false);
    }
    
    public void addBasketToTable() {
        DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
        model.setRowCount(0);
        Object rowData[] = new Object[9];
        for(int i = 0; i < basket.size(); i++){
            rowData[0] = basket.get(i).getPlasticGrade();
            rowData[1] = basket.get(i).getColourPrint();
            rowData[2] = basket.get(i).getInnerInsulation();
            rowData[3] = basket.get(i).getOuterReinforcement();
            rowData[4] = basket.get(i).getChemicalResistance();
            rowData[5] = basket.get(i).getLength();
            rowData[6] = basket.get(i).getDiameter();
            rowData[7] = basket.get(i).getQuantityOfPipes();
            rowData[8] = basket.get(i).getPipeCost();
            model.addRow(rowData);
        }
    }
    
//General Methods
    
    public static ArrayList<Pipe> basket = new ArrayList<>();
    double orderTotal = 0;
    
    public void totalCostOfOrder(){
        orderTotal = 0;
        for (Pipe p : basket) {
            orderTotal += p.getPipeCost();
            }
        lblTotalCostVar.setText(String.format ("%.2f", orderTotal));
    }
    
    public void PipeTypeDetector(int pGrade, int colourPrint, int quantOfPipe, boolean innerInsul,
            boolean outerRein, boolean chemResist, double Length, double Diameter) throws Exception{
        
        if (pGrade <= 3 && colourPrint == 0 && !innerInsul && !outerRein){
            //Its pipe one!
            PipeTypeOne pipeOrderType1 = new PipeTypeOne(pGrade, quantOfPipe, chemResist, Length, Diameter);
            lblUserMessage.setText("Pipe type one created");
            pipeOrderType1.calcFullCost();
            basket.add(pipeOrderType1);
        }
        else if (2 <= pGrade && pGrade <= 4 && colourPrint == 1 && !innerInsul && !outerRein) {
            //its pipe two!
            PipeTypeTwo pipeOrderType2 = new PipeTypeTwo(pGrade, quantOfPipe, chemResist, Length, Diameter);
            lblUserMessage.setText("Pipe type two created");
            pipeOrderType2.calcFullCost();
            basket.add(pipeOrderType2);
        }
        else if (2 <= pGrade && pGrade <= 5 && colourPrint == 2 && !innerInsul && !outerRein) {
            //its pipe three!
            PipeTypeThree pipeOrderType3 = new PipeTypeThree(pGrade, quantOfPipe, chemResist, Length, Diameter);
            lblUserMessage.setText("Pipe type three created");
            pipeOrderType3.calcFullCost();
            basket.add(pipeOrderType3);
        }
        else if (2 <= pGrade && pGrade <= 5 && colourPrint == 2 && innerInsul && !outerRein) {
            //its pipe four!
            PipeTypeFour pipeOrderType4 = new PipeTypeFour(pGrade, quantOfPipe, chemResist, Length, Diameter);
            lblUserMessage.setText("Pipe type four created");
            pipeOrderType4.calcFullCost();
            basket.add(pipeOrderType4);
        }
        else if (3 <= pGrade && pGrade <= 5 && colourPrint == 2 && innerInsul && outerRein) {
            //its pipe five!
            PipeTypeFive pipeOrderType5 = new PipeTypeFive(pGrade, quantOfPipe, chemResist, Length, Diameter);
            lblUserMessage.setText("Pipe type five created");
            pipeOrderType5.calcFullCost();
            basket.add(pipeOrderType5);
        }
        else{
            //Not valid
             throw new Exception("Pipe details invalid, \n "
                + "please refer to the table for valid pipe attributes");
        }
    }
    
    public void writeToFile() throws Exception {
        FileOutputStream out = new FileOutputStream("newOrder.txt");
        //String orderHeader = "";
        String orderBody = "Order Details: Plastic Grade, Colour Print, Inner Insulation, outer reinforcement," 
                            + " Chemical resistance, Length, Diameter, Quantity, Cost \r\n";
        for (Pipe p : basket){
            orderBody += Integer.toString(p.getPlasticGrade()) + ", "
            + Integer.toString(p.getColourPrint()) + ", "
            + Boolean.toString(p.getInnerInsulation()) + ", "
            + Boolean.toString(p.getOuterReinforcement()) + ", "
            + Boolean.toString(p.getChemicalResistance()) + ", "
            + Double.toString(p.getLength()) + ", "
            + Double.toString(p.getDiameter()) + ", "
            + Integer.toString(p.getQuantityOfPipes()) + ", "
            + Double.toString(p.getPipeCost()) + "\r\n";
        } 
        
        orderBody += "Total Cost:" + String.format ("%.2f", orderTotal);
        
        //string orderFile = orderHeader+
        byte buffer [] = orderBody.getBytes();
        out.write(buffer) ;
        clearForm();
        lblUserMessage.setText("Order Successful , Check the folder the application is in!");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToBasket;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCompleteOrder;
    private javax.swing.JButton btnRemovePipe;
    private javax.swing.JCheckBox cbxChemResistance;
    private javax.swing.JCheckBox cbxInnerInsulation;
    private javax.swing.JCheckBox cbxOuterReinforcement;
    private javax.swing.JComboBox<String> cmbxColourPrint;
    private javax.swing.JComboBox<String> cmbxGrade;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblChemResistance;
    private javax.swing.JLabel lblColour;
    private javax.swing.JLabel lblDiameter;
    private javax.swing.JLabel lblGrade;
    private javax.swing.JLabel lblLength;
    private javax.swing.JLabel lblOuterReinforcement;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblTotalCost;
    private javax.swing.JLabel lblTotalCostVar;
    private javax.swing.JLabel lblUserMessage;
    private javax.swing.JLabel lbl_InnerInsulation;
    private javax.swing.JPanel pnlPipeDataForm;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTextField tfdDiameter;
    private javax.swing.JTextField tfdLength;
    private javax.swing.JTextField tfdQuantity;
    // End of variables declaration//GEN-END:variables
}
